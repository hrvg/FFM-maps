palette = pal,
breaks = brk,
# midpoint = get.midpoint(name),
size = .25)
ma
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal <- divergingx_hcl(length(brk) - 1, 0, 120, 240, 100, 100, 100, 25, 25, 25,)
pal <- divergingx_hcl(length(brk) - 1, palette = "Costum", 0, 120, 240, 100, 100, 100, 25, 25, 25,)
pal <- divergingx_hcl(length(brk) - 1, palette = "Geyser", 0, 120, 240, 100, 100, 100, 25, 25, 25,)
pal <- divergingx_hcl(length(brk) - 1, palette = "Geyser", 0, 120, 240, 100, 100, 100, 25, 25, 25)
pal <- divergingx_hcl(length(brk) - 1, 0, 120, 240, 100, 100, 100, 25, 25, 25)
pal <- sequential_hcl(4, "Blues 2")
pal
pal1 <- sequential_hcl(3, "Blues 2")
pal2 <- sequential_hcl(2, "Greens 2")
pal3 <- sequential_hcl(3, "Reds 2")
pal1
pal1 <- sequential_hcl(3, "Blues 2")
pal2 <- sequential_hcl(2, "Greens 2")
pal3 <- sequential_hcl(3, "Reds 2")
pal <- c(pal1, pal2[2], pal[3])
pal
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- sequential_hcl(3, "Blues 2")
pal2 <- sequential_hcl(2, "Greens 2")
pal3 <- sequential_hcl(3, "Reds 2")
pal <- c(pal1, pal2[2], pal3)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = pal,
breaks = brk,
# midpoint = get.midpoint(name),
size = .25)
ma
ma <- tm_shape(GagesUSGS_joined, name = name)
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- sequential_hcl(3, "Blues 2")
pal2 <- sequential_hcl(2, "Greens 2")
pal3 <- sequential_hcl(3, "Reds 2")
pal <- c(pal1, pal2[2], pal3)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = pal,
breaks = brk,
# midpoint = get.midpoint(name),
size = .25)
ma
ma <- tm_shape(GagesUSGS_joined, name = name)
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- sequential_hcl(3, "Blues 2")
pal2 <- sequential_hcl(2, "Greens 2")
pal3 <- sequential_hcl(3, "Reds 2", rev = TRUE)
pal <- c(pal1, pal2[1], pal3)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = pal,
breaks = brk,
# midpoint = get.midpoint(name),
size = .25)
maPdf <- background + ma
maPdf
ma <- tm_shape(GagesUSGS_joined, name = name)
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- sequential_hcl(7, "Blues 2")[1:3]
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- sequential_hcl(7, "Reds 2", rev = TRUE)[1:3]
pal <- c(pal1, pal2, pal3)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = pal,
breaks = brk,
# midpoint = get.midpoint(name),
size = .25)
maPdf <- background + ma
ma
ma <- tm_shape(GagesUSGS_joined, name = name)
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- sequential_hcl(7, "Blues 2")[1:3]
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- sequential_hcl(7, "Reds 2", rev = TRUE)[4:7]
pal <- c(pal1, pal2, pal3)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = pal,
breaks = brk,
# midpoint = get.midpoint(name),
size = .25)
maPdf <- background + ma
maPdf
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- sequential_hcl(7, "Blues 2")[1:3]
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- sequential_hcl(7, "Reds 2", rev = TRUE)[5:7]
pal <- c(pal1, pal2, pal3)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = pal,
breaks = brk,
# midpoint = get.midpoint(name),
size = .25)
maPdf <- background + ma
maPdf
ma <- tm_shape(GagesUSGS_joined, name = name)
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- sequential_hcl(7, "Blues 2")[1:3]
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- sequential_hcl(7, "Reds 2", rev = TRUE)[5:7]
pal <- c(pal1, pal2, pal3)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = pal,
breaks = brk,
midpoint = get.midpoint(name),
size = .25)
maPdf <- background + ma
maPdf
grep(names(GagesUSGS_joined))
grep("IQR", names(GagesUSGS_joined))
grep("percent", names(GagesUSGS_joined))
apply(GagesUSGS_joined@data[, grep("percent", names(GagesUSGS_joined))], 2, range)
apply(GagesUSGS_joined@data[, grep("percent", names(GagesUSGS_joined))], 2, min)
apply(GagesUSGS_joined@data[, grep("percent", names(GagesUSGS_joined))], 2, range)
apply(GagesUSGS_joined@data[, grep("percent", names(GagesUSGS_joined))], 2, function(col) range(na.omit(range)))
apply(GagesUSGS_joined@data[, grep("percent", names(GagesUSGS_joined))], 2, function(col) range(na.omit(col)))
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf) * 50
brk
brk <- c(0, 25, 35, 45, 55, 65, 75, 85, 100)
length(brk)
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
length(brk)
start
start = 2
name <- names(GagesUSGS_joined)[start]
name
ma <- tm_shape(GagesUSGS_joined, name = name)
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
brk <- c(0, 25, 35, 45, 55, 65, 75, 100)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = pal,
breaks = brk,
midpoint = get.midpoint(name),
size = .25)
maPdf <- background + ma
maPdf
get.colors <- function(name){
if (grepl("percent_IQR", name)){
brk <- c(0, 25, 35, 45, 55, 65, 75, 100)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
} else if (grepl("medOE", name)){
pal1 <- head(sequential_hcl(7, "Blues 2"), 1)
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 1)
pal <- c(pal1, pal3)
brk <- c(0, 1)
} else if (grepl("pred_med_IQR", name)){
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
}
return(list(pal = pal, brk = brk))
}
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
size = .25)
ma
start = 3
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
size = .25)
ma
start = 4
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
size = .25)
ma
get.colors <- function(name){
if (grepl("percent_IQR", name)){
brk <- c(0, 25, 35, 45, 55, 65, 75, 100)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
} else if (grepl("pred_med_IQR", name)){
pal1 <- head(sequential_hcl(7, "Blues 2"), 1)
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 1)
pal <- c(pal1, pal3)
brk <- c(0, 1)
} else if (grepl("medOE", name)){
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
}
return(list(pal = pal, brk = brk))
}
get.colors <- function(name){
if (grepl("percent_IQR", name)){
brk <- c(0, 25, 35, 45, 55, 65, 75, 100)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
} else if (grepl("pred_med_IQR", name)){
pal1 <- head(sequential_hcl(7, "Blues 2"), 1)
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 1)
pal <- c(pal1, pal3)
brk <- NULL
} else if (grepl("medOE", name)){
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
}
return(list(pal = pal, brk = brk))
}
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
size = .25)
ma
start = 2
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
size = .25)
ma
start = 3
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
size = .25)
ma
get.colors <- function(name){
if (grepl("percent_IQR", name)){
brk <- c(0, 25, 35, 45, 55, 65, 75, 100)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
} else if (grepl("pred_med_IQR", name)){
pal1 <- head(sequential_hcl(7, "Blues 2"), 1)
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 1)
pal <- c(pal1, pal3)
brk <- c(0, 0, 1)
} else if (grepl("medOE", name)){
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
}
return(list(pal = pal, brk = brk))
}
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
# palette = ifelse(length(unique(GagesUSGS_joined[[name]])) < 3, "Set1", "-viridis"),
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
size = .25)
ma
get.colors <- function(name){
if (grepl("percent_IQR", name)){
brk <- c(0, 25, 35, 45, 55, 65, 75, 100)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
} else if (grepl("pred_med_IQR", name)){
pal1 <- head(sequential_hcl(7, "Blues 2"), 1)
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 1)
pal <- c(pal1, pal3)
brk <- NULL
} else if (grepl("medOE", name)){
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
}
return(list(pal = pal, brk = brk))
}
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
style = ifelse(is.null(breaks), "cat", "fixed"),
size = .25)
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
style = ifelse(is.null(get.colors(name)$brk), "cat", "fixed"),
size = .25)
ma
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
style = ifelse(is.null(get.colors(name)$brk), "cat", "fixed"),
labels = ifelse(is.null(get.colors(name)$brk), c("False (0)", "True (1)"), NULL),
size = .25)
maPdf <- background + ma
maPdf
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
style = ifelse(is.null(get.colors(name)$brk), "cat", "fixed"),
labels = ifelse(is.null(get.colors(name)$brk), list("False (0)", "True (1)"), NULL),
size = .25)
maPdf <- background + ma
maPdf
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
style = ifelse(is.null(get.colors(name)$brk), "cat", "fixed"),
# labels = ifelse(is.null(get.colors(name)$brk), c("False", "True"), NULL),
size = .25)
ma
get.colors <- function(name){
if (grepl("percent_IQR", name)){
brk <- c(0, 25, 35, 45, 55, 65, 75, 100)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
} else if (grepl("pred_med_IQR", name)){
pal1 <- head(sequential_hcl(7, "Blues 2"), 1)
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 1)
pal <- c(pal3, pal1)
brk <- NULL
} else if (grepl("medOE", name)){
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
}
return(list(pal = pal, brk = brk))
}
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
style = ifelse(is.null(get.colors(name)$brk), "cat", "fixed"),
# labels = ifelse(is.null(get.colors(name)$brk), c("False", "True"), NULL),
size = .25)
ma
ifelse(is.null(get.colors(name)$brk), c("False", "True"), NULL)
get.colors <- function(name){
if (grepl("percent_IQR", name)){
brk <- c(0, 25, 35, 45, 55, 65, 75, 100)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
labs <- NULL
} else if (grepl("pred_med_IQR", name)){
pal1 <- head(sequential_hcl(7, "Blues 2"), 1)
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 1)
pal <- c(pal3, pal1)
brk <- NULL
labs <- c("False (0)", "True (1)")
} else if (grepl("medOE", name)){
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
labs <- NULL
}
return(list(pal = pal, brk = brk, labs = labs))
}
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
palette = get.colors(name)$pal,
breaks = get.colors(name)$brk,
style = ifelse(is.null(get.colors(name)$brk), "cat", "fixed"),
labels = get.colors(name)$labs,
size = .25)
ma
source('/mnt/3A5D3E74760BD399/research/exploitation/R/FFM_maps/make_maps.R')
source('/mnt/3A5D3E74760BD399/research/exploitation/R/FFM_maps/make_maps.R')
source('/mnt/3A5D3E74760BD399/research/exploitation/R/FFM_maps/make_maps.R')
name
get.aes <- function(name){
if (grepl("percent_IQR", name)){
brk <- c(0, 25, 35, 45, 55, 65, 75, 100)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
labs <- NULL
} else if (grepl("pred_med_IQR", name)){
pal1 <- head(sequential_hcl(7, "Blues 2"), 1)
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 1)
pal <- c(pal3, pal1)
brk <- NULL
labs <- c("False (0)", "True (1)")
} else if (grepl("medOE", name)){
brk <- c(-Inf, 0.5, 0.7, 0.9, 1.1, 1.4, 2, Inf)
pal1 <- head(sequential_hcl(7, "Blues 2"), 3)
pal2 <- sequential_hcl(2, "Greens 2")[1]
pal3 <- tail(sequential_hcl(7, "Reds 2", rev = TRUE), 3)
pal <- c(pal1, pal2, pal3)
labs <- NULL
}
return(list(pal = pal, brk = brk, labs = labs))
}
boundingBox <- tmaptools::geocode_OSM("California")$bbox
upperLeft <- c(boundingBox$ymax, boundingBox$xmin)
lowerRight <- c(boundingBox$ymin, boundingBox$xmax)
osm <- raster(openmap(upperLeft, lowerRight, type = "http://tile.stamen.com/toner-background/{z}/{x}/{y}.png", zoom = 6))
background <- tm_shape(osm) + tm_rgb(alpha = 1/3) + tm_scale_bar(position = c("right", "bottom")) + tm_compass(position = c("left", "bottom")) + tm_layout(legend.position = c("right", "top"))
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
palette = get.aes(name)$pal,
breaks = get.aes(name)$brk,
style = ifelse(is.null(get.aes(name)$brk), "cat", "fixed"),
labels = get.aes(name)$labs,
size = .25)
start = 2
boundingBox <- tmaptools::geocode_OSM("California")$bbox
upperLeft <- c(boundingBox$ymax, boundingBox$xmin)
lowerRight <- c(boundingBox$ymin, boundingBox$xmax)
osm <- raster(openmap(upperLeft, lowerRight, type = "http://tile.stamen.com/toner-background/{z}/{x}/{y}.png", zoom = 6))
background <- tm_shape(osm) + tm_rgb(alpha = 1/3) + tm_scale_bar(position = c("right", "bottom")) + tm_compass(position = c("left", "bottom")) + tm_layout(legend.position = c("right", "top"))
name <- names(GagesUSGS_joined)[start]
ma <- tm_shape(GagesUSGS_joined, name = name)
ma <- ma + tm_dots(col = name,
title = name,
palette = get.aes(name)$pal,
breaks = get.aes(name)$brk,
style = ifelse(is.null(get.aes(name)$brk), "cat", "fixed"),
labels = get.aes(name)$labs,
size = .25)
get.aes(name)
name
source('/mnt/3A5D3E74760BD399/research/exploitation/R/FFM_maps/make_maps.R')
source('/mnt/3A5D3E74760BD399/research/exploitation/R/FFM_maps/make_maps.R')
english_corpus <- readRDS("/mnt/3A5D3E74760BD399/research/data/latin_america/water-management/english_corpus.rds")
names(english_corpus)
head(english_corpus$raw)
head(english_corpus$raw[1])
english_corpus$raw[1]
nchar(english_corpus$raw[1])
min(sapply(english_corpus$raw, nchar))
max(sapply(english_corpus$raw, nchar))
titleInd_file <- "F:/hguillon/research/exploitation/R/latin_america/data/titleInd.Rds"
titleInd <- readRDS(titleInd_file)
